(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.Index = global.Index || {}, global.Index.js = global.Index.js || {})));
}(this, (function (exports) {

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};











var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var tv4=createCommonjsModule(function(module){/*
Author: Geraint Luff and others
Year: 2013

This code is released into the "public domain" by its author(s).  Anybody may use, alter and distribute the code without restriction.  The author makes no guarantees, and takes no liability of any kind for use of this code.

If you find a bug or make an improvement, it would be courteous to let the author know, but it is not compulsory.
*/(function(global,factory){if(typeof undefined==='function'&&undefined.amd){// AMD. Register as an anonymous module.
undefined([],factory);}else if('object'!=='undefined'&&module.exports){// CommonJS. Define export.
module.exports=factory();}else{// Browser globals
global.tv4=factory();}})(commonjsGlobal,function(){// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys
if(!Object.keys){Object.keys=function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!{toString:null}.propertyIsEnumerable('toString'),dontEnums=['toString','toLocaleString','valueOf','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','constructor'],dontEnumsLength=dontEnums.length;return function(obj){if((typeof obj==='undefined'?'undefined':_typeof(obj))!=='object'&&typeof obj!=='function'||obj===null){throw new TypeError('Object.keys called on non-object');}var result=[];for(var prop in obj){if(hasOwnProperty.call(obj,prop)){result.push(prop);}}if(hasDontEnumBug){for(var i=0;i<dontEnumsLength;i++){if(hasOwnProperty.call(obj,dontEnums[i])){result.push(dontEnums[i]);}}}return result;};}();}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
if(!Object.create){Object.create=function(){function F(){}return function(o){if(arguments.length!==1){throw new Error('Object.create implementation only accepts one parameter.');}F.prototype=o;return new F();};}();}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FisArray
if(!Array.isArray){Array.isArray=function(vArg){return Object.prototype.toString.call(vArg)==="[object Array]";};}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf
if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement/*, fromIndex */){if(this===null){throw new TypeError();}var t=Object(this);var len=t.length>>>0;if(len===0){return-1;}var n=0;if(arguments.length>1){n=Number(arguments[1]);if(n!==n){// shortcut for verifying if it's NaN
n=0;}else if(n!==0&&n!==Infinity&&n!==-Infinity){n=(n>0||-1)*Math.floor(Math.abs(n));}}if(n>=len){return-1;}var k=n>=0?n:Math.max(len-Math.abs(n),0);for(;k<len;k++){if(k in t&&t[k]===searchElement){return k;}}return-1;};}// Grungey Object.isFrozen hack
if(!Object.isFrozen){Object.isFrozen=function(obj){var key="tv4_test_frozen_key";while(obj.hasOwnProperty(key)){key+=Math.random();}try{obj[key]=true;delete obj[key];return false;}catch(e){return true;}};}// Based on: https://github.com/geraintluff/uri-templates, but with all the de-substitution stuff removed
var uriTemplateGlobalModifiers={"+":true,"#":true,".":true,"/":true,";":true,"?":true,"&":true};var uriTemplateSuffices={"*":true};function notReallyPercentEncode(string){return encodeURI(string).replace(/%25[0-9][0-9]/g,function(doubleEncoded){return"%"+doubleEncoded.substring(3);});}function uriTemplateSubstitution(spec){var modifier="";if(uriTemplateGlobalModifiers[spec.charAt(0)]){modifier=spec.charAt(0);spec=spec.substring(1);}var separator="";var prefix="";var shouldEscape=true;var showVariables=false;var trimEmptyString=false;if(modifier==='+'){shouldEscape=false;}else if(modifier==="."){prefix=".";separator=".";}else if(modifier==="/"){prefix="/";separator="/";}else if(modifier==='#'){prefix="#";shouldEscape=false;}else if(modifier===';'){prefix=";";separator=";";showVariables=true;trimEmptyString=true;}else if(modifier==='?'){prefix="?";separator="&";showVariables=true;}else if(modifier==='&'){prefix="&";separator="&";showVariables=true;}var varNames=[];var varList=spec.split(",");var varSpecs=[];var varSpecMap={};for(var i=0;i<varList.length;i++){var varName=varList[i];var truncate=null;if(varName.indexOf(":")!==-1){var parts=varName.split(":");varName=parts[0];truncate=parseInt(parts[1],10);}var suffices={};while(uriTemplateSuffices[varName.charAt(varName.length-1)]){suffices[varName.charAt(varName.length-1)]=true;varName=varName.substring(0,varName.length-1);}var varSpec={truncate:truncate,name:varName,suffices:suffices};varSpecs.push(varSpec);varSpecMap[varName]=varSpec;varNames.push(varName);}var subFunction=function subFunction(valueFunction){var result="";var startIndex=0;for(var i=0;i<varSpecs.length;i++){var varSpec=varSpecs[i];var value=valueFunction(varSpec.name);if(value===null||value===undefined||Array.isArray(value)&&value.length===0||(typeof value==='undefined'?'undefined':_typeof(value))==='object'&&Object.keys(value).length===0){startIndex++;continue;}if(i===startIndex){result+=prefix;}else{result+=separator||",";}if(Array.isArray(value)){if(showVariables){result+=varSpec.name+"=";}for(var j=0;j<value.length;j++){if(j>0){result+=varSpec.suffices['*']?separator||",":",";if(varSpec.suffices['*']&&showVariables){result+=varSpec.name+"=";}}result+=shouldEscape?encodeURIComponent(value[j]).replace(/!/g,"%21"):notReallyPercentEncode(value[j]);}}else if((typeof value==='undefined'?'undefined':_typeof(value))==="object"){if(showVariables&&!varSpec.suffices['*']){result+=varSpec.name+"=";}var first=true;for(var key in value){if(!first){result+=varSpec.suffices['*']?separator||",":",";}first=false;result+=shouldEscape?encodeURIComponent(key).replace(/!/g,"%21"):notReallyPercentEncode(key);result+=varSpec.suffices['*']?'=':",";result+=shouldEscape?encodeURIComponent(value[key]).replace(/!/g,"%21"):notReallyPercentEncode(value[key]);}}else{if(showVariables){result+=varSpec.name;if(!trimEmptyString||value!==""){result+="=";}}if(varSpec.truncate!=null){value=value.substring(0,varSpec.truncate);}result+=shouldEscape?encodeURIComponent(value).replace(/!/g,"%21"):notReallyPercentEncode(value);}}return result;};subFunction.varNames=varNames;return{prefix:prefix,substitution:subFunction};}function UriTemplate(template){if(!(this instanceof UriTemplate)){return new UriTemplate(template);}var parts=template.split("{");var textParts=[parts.shift()];var prefixes=[];var substitutions=[];var varNames=[];while(parts.length>0){var part=parts.shift();var spec=part.split("}")[0];var remainder=part.substring(spec.length+1);var funcs=uriTemplateSubstitution(spec);substitutions.push(funcs.substitution);prefixes.push(funcs.prefix);textParts.push(remainder);varNames=varNames.concat(funcs.substitution.varNames);}this.fill=function(valueFunction){var result=textParts[0];for(var i=0;i<substitutions.length;i++){var substitution=substitutions[i];result+=substitution(valueFunction);result+=textParts[i+1];}return result;};this.varNames=varNames;this.template=template;}UriTemplate.prototype={toString:function toString(){return this.template;},fillFromObject:function fillFromObject(obj){return this.fill(function(varName){return obj[varName];});}};var ValidatorContext=function ValidatorContext(parent,collectMultiple,errorReporter,checkRecursive,trackUnknownProperties){this.missing=[];this.missingMap={};this.formatValidators=parent?Object.create(parent.formatValidators):{};this.schemas=parent?Object.create(parent.schemas):{};this.collectMultiple=collectMultiple;this.errors=[];this.handleError=collectMultiple?this.collectError:this.returnError;if(checkRecursive){this.checkRecursive=true;this.scanned=[];this.scannedFrozen=[];this.scannedFrozenSchemas=[];this.scannedFrozenValidationErrors=[];this.validatedSchemasKey='tv4_validation_id';this.validationErrorsKey='tv4_validation_errors_id';}if(trackUnknownProperties){this.trackUnknownProperties=true;this.knownPropertyPaths={};this.unknownPropertyPaths={};}this.errorReporter=errorReporter||defaultErrorReporter('en');if(typeof this.errorReporter==='string'){throw new Error('debug');}this.definedKeywords={};if(parent){for(var key in parent.definedKeywords){this.definedKeywords[key]=parent.definedKeywords[key].slice(0);}}};ValidatorContext.prototype.defineKeyword=function(keyword,keywordFunction){this.definedKeywords[keyword]=this.definedKeywords[keyword]||[];this.definedKeywords[keyword].push(keywordFunction);};ValidatorContext.prototype.createError=function(code,messageParams,dataPath,schemaPath,subErrors,data,schema){var error=new ValidationError(code,messageParams,dataPath,schemaPath,subErrors);error.message=this.errorReporter(error,data,schema);return error;};ValidatorContext.prototype.returnError=function(error){return error;};ValidatorContext.prototype.collectError=function(error){if(error){this.errors.push(error);}return null;};ValidatorContext.prototype.prefixErrors=function(startIndex,dataPath,schemaPath){for(var i=startIndex;i<this.errors.length;i++){this.errors[i]=this.errors[i].prefixWith(dataPath,schemaPath);}return this;};ValidatorContext.prototype.banUnknownProperties=function(data,schema){for(var unknownPath in this.unknownPropertyPaths){var error=this.createError(ErrorCodes.UNKNOWN_PROPERTY,{path:unknownPath},unknownPath,"",null,data,schema);var result=this.handleError(error);if(result){return result;}}return null;};ValidatorContext.prototype.addFormat=function(format,validator){if((typeof format==='undefined'?'undefined':_typeof(format))==='object'){for(var key in format){this.addFormat(key,format[key]);}return this;}this.formatValidators[format]=validator;};ValidatorContext.prototype.resolveRefs=function(schema,urlHistory){if(schema['$ref']!==undefined){urlHistory=urlHistory||{};if(urlHistory[schema['$ref']]){return this.createError(ErrorCodes.CIRCULAR_REFERENCE,{urls:Object.keys(urlHistory).join(', ')},'','',null,undefined,schema);}urlHistory[schema['$ref']]=true;schema=this.getSchema(schema['$ref'],urlHistory);}return schema;};ValidatorContext.prototype.getSchema=function(url,urlHistory){var schema;if(this.schemas[url]!==undefined){schema=this.schemas[url];return this.resolveRefs(schema,urlHistory);}var baseUrl=url;var fragment="";if(url.indexOf('#')!==-1){fragment=url.substring(url.indexOf("#")+1);baseUrl=url.substring(0,url.indexOf("#"));}if(_typeof(this.schemas[baseUrl])==='object'){schema=this.schemas[baseUrl];var pointerPath=decodeURIComponent(fragment);if(pointerPath===""){return this.resolveRefs(schema,urlHistory);}else if(pointerPath.charAt(0)!=="/"){return undefined;}var parts=pointerPath.split("/").slice(1);for(var i=0;i<parts.length;i++){var component=parts[i].replace(/~1/g,"/").replace(/~0/g,"~");if(schema[component]===undefined){schema=undefined;break;}schema=schema[component];}if(schema!==undefined){return this.resolveRefs(schema,urlHistory);}}if(this.missing[baseUrl]===undefined){this.missing.push(baseUrl);this.missing[baseUrl]=baseUrl;this.missingMap[baseUrl]=baseUrl;}};ValidatorContext.prototype.searchSchemas=function(schema,url){if(Array.isArray(schema)){for(var i=0;i<schema.length;i++){this.searchSchemas(schema[i],url);}}else if(schema&&(typeof schema==='undefined'?'undefined':_typeof(schema))==="object"){if(typeof schema.id==="string"){if(isTrustedUrl(url,schema.id)){if(this.schemas[schema.id]===undefined){this.schemas[schema.id]=schema;}}}for(var key in schema){if(key!=="enum"){if(_typeof(schema[key])==="object"){this.searchSchemas(schema[key],url);}else if(key==="$ref"){var uri=getDocumentUri(schema[key]);if(uri&&this.schemas[uri]===undefined&&this.missingMap[uri]===undefined){this.missingMap[uri]=uri;}}}}}};ValidatorContext.prototype.addSchema=function(url,schema){//overload
if(typeof url!=='string'||typeof schema==='undefined'){if((typeof url==='undefined'?'undefined':_typeof(url))==='object'&&typeof url.id==='string'){schema=url;url=schema.id;}else{return;}}if(url===getDocumentUri(url)+"#"){// Remove empty fragment
url=getDocumentUri(url);}this.schemas[url]=schema;delete this.missingMap[url];normSchema(schema,url);this.searchSchemas(schema,url);};ValidatorContext.prototype.getSchemaMap=function(){var map={};for(var key in this.schemas){map[key]=this.schemas[key];}return map;};ValidatorContext.prototype.getSchemaUris=function(filterRegExp){var list=[];for(var key in this.schemas){if(!filterRegExp||filterRegExp.test(key)){list.push(key);}}return list;};ValidatorContext.prototype.getMissingUris=function(filterRegExp){var list=[];for(var key in this.missingMap){if(!filterRegExp||filterRegExp.test(key)){list.push(key);}}return list;};ValidatorContext.prototype.dropSchemas=function(){this.schemas={};this.reset();};ValidatorContext.prototype.reset=function(){this.missing=[];this.missingMap={};this.errors=[];};ValidatorContext.prototype.validateAll=function(data,schema,dataPathParts,schemaPathParts,dataPointerPath){var topLevel;schema=this.resolveRefs(schema);if(!schema){return null;}else if(schema instanceof ValidationError){this.errors.push(schema);return schema;}var startErrorCount=this.errors.length;var frozenIndex,scannedFrozenSchemaIndex=null,scannedSchemasIndex=null;if(this.checkRecursive&&data&&(typeof data==='undefined'?'undefined':_typeof(data))==='object'){topLevel=!this.scanned.length;if(data[this.validatedSchemasKey]){var schemaIndex=data[this.validatedSchemasKey].indexOf(schema);if(schemaIndex!==-1){this.errors=this.errors.concat(data[this.validationErrorsKey][schemaIndex]);return null;}}if(Object.isFrozen(data)){frozenIndex=this.scannedFrozen.indexOf(data);if(frozenIndex!==-1){var frozenSchemaIndex=this.scannedFrozenSchemas[frozenIndex].indexOf(schema);if(frozenSchemaIndex!==-1){this.errors=this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);return null;}}}this.scanned.push(data);if(Object.isFrozen(data)){if(frozenIndex===-1){frozenIndex=this.scannedFrozen.length;this.scannedFrozen.push(data);this.scannedFrozenSchemas.push([]);}scannedFrozenSchemaIndex=this.scannedFrozenSchemas[frozenIndex].length;this.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex]=schema;this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex]=[];}else{if(!data[this.validatedSchemasKey]){try{Object.defineProperty(data,this.validatedSchemasKey,{value:[],configurable:true});Object.defineProperty(data,this.validationErrorsKey,{value:[],configurable:true});}catch(e){//IE 7/8 workaround
data[this.validatedSchemasKey]=[];data[this.validationErrorsKey]=[];}}scannedSchemasIndex=data[this.validatedSchemasKey].length;data[this.validatedSchemasKey][scannedSchemasIndex]=schema;data[this.validationErrorsKey][scannedSchemasIndex]=[];}}var errorCount=this.errors.length;var error=this.validateBasic(data,schema,dataPointerPath)||this.validateNumeric(data,schema,dataPointerPath)||this.validateString(data,schema,dataPointerPath)||this.validateArray(data,schema,dataPointerPath)||this.validateObject(data,schema,dataPointerPath)||this.validateCombinations(data,schema,dataPointerPath)||this.validateHypermedia(data,schema,dataPointerPath)||this.validateFormat(data,schema,dataPointerPath)||this.validateDefinedKeywords(data,schema,dataPointerPath)||null;if(topLevel){while(this.scanned.length){var item=this.scanned.pop();delete item[this.validatedSchemasKey];}this.scannedFrozen=[];this.scannedFrozenSchemas=[];}if(error||errorCount!==this.errors.length){while(dataPathParts&&dataPathParts.length||schemaPathParts&&schemaPathParts.length){var dataPart=dataPathParts&&dataPathParts.length?""+dataPathParts.pop():null;var schemaPart=schemaPathParts&&schemaPathParts.length?""+schemaPathParts.pop():null;if(error){error=error.prefixWith(dataPart,schemaPart);}this.prefixErrors(errorCount,dataPart,schemaPart);}}if(scannedFrozenSchemaIndex!==null){this.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex]=this.errors.slice(startErrorCount);}else if(scannedSchemasIndex!==null){data[this.validationErrorsKey][scannedSchemasIndex]=this.errors.slice(startErrorCount);}return this.handleError(error);};ValidatorContext.prototype.validateFormat=function(data,schema){if(typeof schema.format!=='string'||!this.formatValidators[schema.format]){return null;}var errorMessage=this.formatValidators[schema.format].call(null,data,schema);if(typeof errorMessage==='string'||typeof errorMessage==='number'){return this.createError(ErrorCodes.FORMAT_CUSTOM,{message:errorMessage},'','/format',null,data,schema);}else if(errorMessage&&(typeof errorMessage==='undefined'?'undefined':_typeof(errorMessage))==='object'){return this.createError(ErrorCodes.FORMAT_CUSTOM,{message:errorMessage.message||"?"},errorMessage.dataPath||'',errorMessage.schemaPath||"/format",null,data,schema);}return null;};ValidatorContext.prototype.validateDefinedKeywords=function(data,schema,dataPointerPath){for(var key in this.definedKeywords){if(typeof schema[key]==='undefined'){continue;}var validationFunctions=this.definedKeywords[key];for(var i=0;i<validationFunctions.length;i++){var func=validationFunctions[i];var result=func(data,schema[key],schema,dataPointerPath);if(typeof result==='string'||typeof result==='number'){return this.createError(ErrorCodes.KEYWORD_CUSTOM,{key:key,message:result},'','',null,data,schema).prefixWith(null,key);}else if(result&&(typeof result==='undefined'?'undefined':_typeof(result))==='object'){var code=result.code;if(typeof code==='string'){if(!ErrorCodes[code]){throw new Error('Undefined error code (use defineError): '+code);}code=ErrorCodes[code];}else if(typeof code!=='number'){code=ErrorCodes.KEYWORD_CUSTOM;}var messageParams=_typeof(result.message)==='object'?result.message:{key:key,message:result.message||"?"};var schemaPath=result.schemaPath||"/"+key.replace(/~/g,'~0').replace(/\//g,'~1');return this.createError(code,messageParams,result.dataPath||null,schemaPath,null,data,schema);}}}return null;};function recursiveCompare(A,B){if(A===B){return true;}if(A&&B&&(typeof A==='undefined'?'undefined':_typeof(A))==="object"&&(typeof B==='undefined'?'undefined':_typeof(B))==="object"){if(Array.isArray(A)!==Array.isArray(B)){return false;}else if(Array.isArray(A)){if(A.length!==B.length){return false;}for(var i=0;i<A.length;i++){if(!recursiveCompare(A[i],B[i])){return false;}}}else{var key;for(key in A){if(B[key]===undefined&&A[key]!==undefined){return false;}}for(key in B){if(A[key]===undefined&&B[key]!==undefined){return false;}}for(key in A){if(!recursiveCompare(A[key],B[key])){return false;}}}return true;}return false;}ValidatorContext.prototype.validateBasic=function validateBasic(data,schema,dataPointerPath){var error;if(error=this.validateType(data,schema,dataPointerPath)){return error.prefixWith(null,"type");}if(error=this.validateEnum(data,schema,dataPointerPath)){return error.prefixWith(null,"type");}return null;};ValidatorContext.prototype.validateType=function validateType(data,schema){if(schema.type===undefined){return null;}var dataType=typeof data==='undefined'?'undefined':_typeof(data);if(data===null){dataType="null";}else if(Array.isArray(data)){dataType="array";}var allowedTypes=schema.type;if(!Array.isArray(allowedTypes)){allowedTypes=[allowedTypes];}for(var i=0;i<allowedTypes.length;i++){var type=allowedTypes[i];if(type===dataType||type==="integer"&&dataType==="number"&&data%1===0){return null;}}return this.createError(ErrorCodes.INVALID_TYPE,{type:dataType,expected:allowedTypes.join("/")},'','',null,data,schema);};ValidatorContext.prototype.validateEnum=function validateEnum(data,schema){if(schema["enum"]===undefined){return null;}for(var i=0;i<schema["enum"].length;i++){var enumVal=schema["enum"][i];if(recursiveCompare(data,enumVal)){return null;}}return this.createError(ErrorCodes.ENUM_MISMATCH,{value:typeof JSON!=='undefined'?JSON.stringify(data):data},'','',null,data,schema);};ValidatorContext.prototype.validateNumeric=function validateNumeric(data,schema,dataPointerPath){return this.validateMultipleOf(data,schema,dataPointerPath)||this.validateMinMax(data,schema,dataPointerPath)||this.validateNaN(data,schema,dataPointerPath)||null;};var CLOSE_ENOUGH_LOW=Math.pow(2,-51);var CLOSE_ENOUGH_HIGH=1-CLOSE_ENOUGH_LOW;ValidatorContext.prototype.validateMultipleOf=function validateMultipleOf(data,schema){var multipleOf=schema.multipleOf||schema.divisibleBy;if(multipleOf===undefined){return null;}if(typeof data==="number"){var remainder=data/multipleOf%1;if(remainder>=CLOSE_ENOUGH_LOW&&remainder<CLOSE_ENOUGH_HIGH){return this.createError(ErrorCodes.NUMBER_MULTIPLE_OF,{value:data,multipleOf:multipleOf},'','',null,data,schema);}}return null;};ValidatorContext.prototype.validateMinMax=function validateMinMax(data,schema){if(typeof data!=="number"){return null;}if(schema.minimum!==undefined){if(data<schema.minimum){return this.createError(ErrorCodes.NUMBER_MINIMUM,{value:data,minimum:schema.minimum},'','/minimum',null,data,schema);}if(schema.exclusiveMinimum&&data===schema.minimum){return this.createError(ErrorCodes.NUMBER_MINIMUM_EXCLUSIVE,{value:data,minimum:schema.minimum},'','/exclusiveMinimum',null,data,schema);}}if(schema.maximum!==undefined){if(data>schema.maximum){return this.createError(ErrorCodes.NUMBER_MAXIMUM,{value:data,maximum:schema.maximum},'','/maximum',null,data,schema);}if(schema.exclusiveMaximum&&data===schema.maximum){return this.createError(ErrorCodes.NUMBER_MAXIMUM_EXCLUSIVE,{value:data,maximum:schema.maximum},'','/exclusiveMaximum',null,data,schema);}}return null;};ValidatorContext.prototype.validateNaN=function validateNaN(data,schema){if(typeof data!=="number"){return null;}if(isNaN(data)===true||data===Infinity||data===-Infinity){return this.createError(ErrorCodes.NUMBER_NOT_A_NUMBER,{value:data},'','/type',null,data,schema);}return null;};ValidatorContext.prototype.validateString=function validateString(data,schema,dataPointerPath){return this.validateStringLength(data,schema,dataPointerPath)||this.validateStringPattern(data,schema,dataPointerPath)||null;};ValidatorContext.prototype.validateStringLength=function validateStringLength(data,schema){if(typeof data!=="string"){return null;}if(schema.minLength!==undefined){if(data.length<schema.minLength){return this.createError(ErrorCodes.STRING_LENGTH_SHORT,{length:data.length,minimum:schema.minLength},'','/minLength',null,data,schema);}}if(schema.maxLength!==undefined){if(data.length>schema.maxLength){return this.createError(ErrorCodes.STRING_LENGTH_LONG,{length:data.length,maximum:schema.maxLength},'','/maxLength',null,data,schema);}}return null;};ValidatorContext.prototype.validateStringPattern=function validateStringPattern(data,schema){if(typeof data!=="string"||typeof schema.pattern!=="string"&&!(schema.pattern instanceof RegExp)){return null;}var regexp;if(schema.pattern instanceof RegExp){regexp=schema.pattern;}else{var body,flags='';// Check for regular expression literals
// @see http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5
var literal=schema.pattern.match(/^\/(.+)\/([img]*)$/);if(literal){body=literal[1];flags=literal[2];}else{body=schema.pattern;}regexp=new RegExp(body,flags);}if(!regexp.test(data)){return this.createError(ErrorCodes.STRING_PATTERN,{pattern:schema.pattern},'','/pattern',null,data,schema);}return null;};ValidatorContext.prototype.validateArray=function validateArray(data,schema,dataPointerPath){if(!Array.isArray(data)){return null;}return this.validateArrayLength(data,schema,dataPointerPath)||this.validateArrayUniqueItems(data,schema,dataPointerPath)||this.validateArrayItems(data,schema,dataPointerPath)||null;};ValidatorContext.prototype.validateArrayLength=function validateArrayLength(data,schema){var error;if(schema.minItems!==undefined){if(data.length<schema.minItems){error=this.createError(ErrorCodes.ARRAY_LENGTH_SHORT,{length:data.length,minimum:schema.minItems},'','/minItems',null,data,schema);if(this.handleError(error)){return error;}}}if(schema.maxItems!==undefined){if(data.length>schema.maxItems){error=this.createError(ErrorCodes.ARRAY_LENGTH_LONG,{length:data.length,maximum:schema.maxItems},'','/maxItems',null,data,schema);if(this.handleError(error)){return error;}}}return null;};ValidatorContext.prototype.validateArrayUniqueItems=function validateArrayUniqueItems(data,schema){if(schema.uniqueItems){for(var i=0;i<data.length;i++){for(var j=i+1;j<data.length;j++){if(recursiveCompare(data[i],data[j])){var error=this.createError(ErrorCodes.ARRAY_UNIQUE,{match1:i,match2:j},'','/uniqueItems',null,data,schema);if(this.handleError(error)){return error;}}}}}return null;};ValidatorContext.prototype.validateArrayItems=function validateArrayItems(data,schema,dataPointerPath){if(schema.items===undefined){return null;}var error,i;if(Array.isArray(schema.items)){for(i=0;i<data.length;i++){if(i<schema.items.length){if(error=this.validateAll(data[i],schema.items[i],[i],["items",i],dataPointerPath+"/"+i)){return error;}}else if(schema.additionalItems!==undefined){if(typeof schema.additionalItems==="boolean"){if(!schema.additionalItems){error=this.createError(ErrorCodes.ARRAY_ADDITIONAL_ITEMS,{},'/'+i,'/additionalItems',null,data,schema);if(this.handleError(error)){return error;}}}else if(error=this.validateAll(data[i],schema.additionalItems,[i],["additionalItems"],dataPointerPath+"/"+i)){return error;}}}}else{for(i=0;i<data.length;i++){if(error=this.validateAll(data[i],schema.items,[i],["items"],dataPointerPath+"/"+i)){return error;}}}return null;};ValidatorContext.prototype.validateObject=function validateObject(data,schema,dataPointerPath){if((typeof data==='undefined'?'undefined':_typeof(data))!=="object"||data===null||Array.isArray(data)){return null;}return this.validateObjectMinMaxProperties(data,schema,dataPointerPath)||this.validateObjectRequiredProperties(data,schema,dataPointerPath)||this.validateObjectProperties(data,schema,dataPointerPath)||this.validateObjectDependencies(data,schema,dataPointerPath)||null;};ValidatorContext.prototype.validateObjectMinMaxProperties=function validateObjectMinMaxProperties(data,schema){var keys=Object.keys(data);var error;if(schema.minProperties!==undefined){if(keys.length<schema.minProperties){error=this.createError(ErrorCodes.OBJECT_PROPERTIES_MINIMUM,{propertyCount:keys.length,minimum:schema.minProperties},'','/minProperties',null,data,schema);if(this.handleError(error)){return error;}}}if(schema.maxProperties!==undefined){if(keys.length>schema.maxProperties){error=this.createError(ErrorCodes.OBJECT_PROPERTIES_MAXIMUM,{propertyCount:keys.length,maximum:schema.maxProperties},'','/maxProperties',null,data,schema);if(this.handleError(error)){return error;}}}return null;};ValidatorContext.prototype.validateObjectRequiredProperties=function validateObjectRequiredProperties(data,schema){if(schema.required!==undefined){for(var i=0;i<schema.required.length;i++){var key=schema.required[i];if(data[key]===undefined){var error=this.createError(ErrorCodes.OBJECT_REQUIRED,{key:key},'','/required/'+i,null,data,schema);if(this.handleError(error)){return error;}}}}return null;};ValidatorContext.prototype.validateObjectProperties=function validateObjectProperties(data,schema,dataPointerPath){var error;for(var key in data){var keyPointerPath=dataPointerPath+"/"+key.replace(/~/g,'~0').replace(/\//g,'~1');var foundMatch=false;if(schema.properties!==undefined&&schema.properties[key]!==undefined){foundMatch=true;if(error=this.validateAll(data[key],schema.properties[key],[key],["properties",key],keyPointerPath)){return error;}}if(schema.patternProperties!==undefined){for(var patternKey in schema.patternProperties){var regexp=new RegExp(patternKey);if(regexp.test(key)){foundMatch=true;if(error=this.validateAll(data[key],schema.patternProperties[patternKey],[key],["patternProperties",patternKey],keyPointerPath)){return error;}}}}if(!foundMatch){if(schema.additionalProperties!==undefined){if(this.trackUnknownProperties){this.knownPropertyPaths[keyPointerPath]=true;delete this.unknownPropertyPaths[keyPointerPath];}if(typeof schema.additionalProperties==="boolean"){if(!schema.additionalProperties){error=this.createError(ErrorCodes.OBJECT_ADDITIONAL_PROPERTIES,{key:key},'','/additionalProperties',null,data,schema).prefixWith(key,null);if(this.handleError(error)){return error;}}}else{if(error=this.validateAll(data[key],schema.additionalProperties,[key],["additionalProperties"],keyPointerPath)){return error;}}}else if(this.trackUnknownProperties&&!this.knownPropertyPaths[keyPointerPath]){this.unknownPropertyPaths[keyPointerPath]=true;}}else if(this.trackUnknownProperties){this.knownPropertyPaths[keyPointerPath]=true;delete this.unknownPropertyPaths[keyPointerPath];}}return null;};ValidatorContext.prototype.validateObjectDependencies=function validateObjectDependencies(data,schema,dataPointerPath){var error;if(schema.dependencies!==undefined){for(var depKey in schema.dependencies){if(data[depKey]!==undefined){var dep=schema.dependencies[depKey];if(typeof dep==="string"){if(data[dep]===undefined){error=this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY,{key:depKey,missing:dep},'','',null,data,schema).prefixWith(null,depKey).prefixWith(null,"dependencies");if(this.handleError(error)){return error;}}}else if(Array.isArray(dep)){for(var i=0;i<dep.length;i++){var requiredKey=dep[i];if(data[requiredKey]===undefined){error=this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY,{key:depKey,missing:requiredKey},'','/'+i,null,data,schema).prefixWith(null,depKey).prefixWith(null,"dependencies");if(this.handleError(error)){return error;}}}}else{if(error=this.validateAll(data,dep,[],["dependencies",depKey],dataPointerPath)){return error;}}}}}return null;};ValidatorContext.prototype.validateCombinations=function validateCombinations(data,schema,dataPointerPath){return this.validateAllOf(data,schema,dataPointerPath)||this.validateAnyOf(data,schema,dataPointerPath)||this.validateOneOf(data,schema,dataPointerPath)||this.validateNot(data,schema,dataPointerPath)||null;};ValidatorContext.prototype.validateAllOf=function validateAllOf(data,schema,dataPointerPath){if(schema.allOf===undefined){return null;}var error;for(var i=0;i<schema.allOf.length;i++){var subSchema=schema.allOf[i];if(error=this.validateAll(data,subSchema,[],["allOf",i],dataPointerPath)){return error;}}return null;};ValidatorContext.prototype.validateAnyOf=function validateAnyOf(data,schema,dataPointerPath){if(schema.anyOf===undefined){return null;}var errors=[];var startErrorCount=this.errors.length;var oldUnknownPropertyPaths,oldKnownPropertyPaths;if(this.trackUnknownProperties){oldUnknownPropertyPaths=this.unknownPropertyPaths;oldKnownPropertyPaths=this.knownPropertyPaths;}var errorAtEnd=true;for(var i=0;i<schema.anyOf.length;i++){if(this.trackUnknownProperties){this.unknownPropertyPaths={};this.knownPropertyPaths={};}var subSchema=schema.anyOf[i];var errorCount=this.errors.length;var error=this.validateAll(data,subSchema,[],["anyOf",i],dataPointerPath);if(error===null&&errorCount===this.errors.length){this.errors=this.errors.slice(0,startErrorCount);if(this.trackUnknownProperties){for(var knownKey in this.knownPropertyPaths){oldKnownPropertyPaths[knownKey]=true;delete oldUnknownPropertyPaths[knownKey];}for(var unknownKey in this.unknownPropertyPaths){if(!oldKnownPropertyPaths[unknownKey]){oldUnknownPropertyPaths[unknownKey]=true;}}// We need to continue looping so we catch all the property definitions, but we don't want to return an error
errorAtEnd=false;continue;}return null;}if(error){errors.push(error.prefixWith(null,""+i).prefixWith(null,"anyOf"));}}if(this.trackUnknownProperties){this.unknownPropertyPaths=oldUnknownPropertyPaths;this.knownPropertyPaths=oldKnownPropertyPaths;}if(errorAtEnd){errors=errors.concat(this.errors.slice(startErrorCount));this.errors=this.errors.slice(0,startErrorCount);return this.createError(ErrorCodes.ANY_OF_MISSING,{},"","/anyOf",errors,data,schema);}};ValidatorContext.prototype.validateOneOf=function validateOneOf(data,schema,dataPointerPath){if(schema.oneOf===undefined){return null;}var validIndex=null;var errors=[];var startErrorCount=this.errors.length;var oldUnknownPropertyPaths,oldKnownPropertyPaths;if(this.trackUnknownProperties){oldUnknownPropertyPaths=this.unknownPropertyPaths;oldKnownPropertyPaths=this.knownPropertyPaths;}for(var i=0;i<schema.oneOf.length;i++){if(this.trackUnknownProperties){this.unknownPropertyPaths={};this.knownPropertyPaths={};}var subSchema=schema.oneOf[i];var errorCount=this.errors.length;var error=this.validateAll(data,subSchema,[],["oneOf",i],dataPointerPath);if(error===null&&errorCount===this.errors.length){if(validIndex===null){validIndex=i;}else{this.errors=this.errors.slice(0,startErrorCount);return this.createError(ErrorCodes.ONE_OF_MULTIPLE,{index1:validIndex,index2:i},"","/oneOf",null,data,schema);}if(this.trackUnknownProperties){for(var knownKey in this.knownPropertyPaths){oldKnownPropertyPaths[knownKey]=true;delete oldUnknownPropertyPaths[knownKey];}for(var unknownKey in this.unknownPropertyPaths){if(!oldKnownPropertyPaths[unknownKey]){oldUnknownPropertyPaths[unknownKey]=true;}}}}else if(error){errors.push(error);}}if(this.trackUnknownProperties){this.unknownPropertyPaths=oldUnknownPropertyPaths;this.knownPropertyPaths=oldKnownPropertyPaths;}if(validIndex===null){errors=errors.concat(this.errors.slice(startErrorCount));this.errors=this.errors.slice(0,startErrorCount);return this.createError(ErrorCodes.ONE_OF_MISSING,{},"","/oneOf",errors,data,schema);}else{this.errors=this.errors.slice(0,startErrorCount);}return null;};ValidatorContext.prototype.validateNot=function validateNot(data,schema,dataPointerPath){if(schema.not===undefined){return null;}var oldErrorCount=this.errors.length;var oldUnknownPropertyPaths,oldKnownPropertyPaths;if(this.trackUnknownProperties){oldUnknownPropertyPaths=this.unknownPropertyPaths;oldKnownPropertyPaths=this.knownPropertyPaths;this.unknownPropertyPaths={};this.knownPropertyPaths={};}var error=this.validateAll(data,schema.not,null,null,dataPointerPath);var notErrors=this.errors.slice(oldErrorCount);this.errors=this.errors.slice(0,oldErrorCount);if(this.trackUnknownProperties){this.unknownPropertyPaths=oldUnknownPropertyPaths;this.knownPropertyPaths=oldKnownPropertyPaths;}if(error===null&&notErrors.length===0){return this.createError(ErrorCodes.NOT_PASSED,{},"","/not",null,data,schema);}return null;};ValidatorContext.prototype.validateHypermedia=function validateCombinations(data,schema,dataPointerPath){if(!schema.links){return null;}var error;for(var i=0;i<schema.links.length;i++){var ldo=schema.links[i];if(ldo.rel==="describedby"){var template=new UriTemplate(ldo.href);var allPresent=true;for(var j=0;j<template.varNames.length;j++){if(!(template.varNames[j]in data)){allPresent=false;break;}}if(allPresent){var schemaUrl=template.fillFromObject(data);var subSchema={"$ref":schemaUrl};if(error=this.validateAll(data,subSchema,[],["links",i],dataPointerPath)){return error;}}}}};// parseURI() and resolveUrl() are from https://gist.github.com/1088850
//   -  released as public domain by author ("Yaffle") - see comments on gist
function parseURI(url){var m=String(url).replace(/^\s+|\s+$/g,'').match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);// authority = '//' + user + ':' + pass '@' + hostname + ':' port
return m?{href:m[0]||'',protocol:m[1]||'',authority:m[2]||'',host:m[3]||'',hostname:m[4]||'',port:m[5]||'',pathname:m[6]||'',search:m[7]||'',hash:m[8]||''}:null;}function resolveUrl(base,href){// RFC 3986
function removeDotSegments(input){var output=[];input.replace(/^(\.\.?(\/|$))+/,'').replace(/\/(\.(\/|$))+/g,'/').replace(/\/\.\.$/,'/../').replace(/\/?[^\/]*/g,function(p){if(p==='/..'){output.pop();}else{output.push(p);}});return output.join('').replace(/^\//,input.charAt(0)==='/'?'/':'');}href=parseURI(href||'');base=parseURI(base||'');return!href||!base?null:(href.protocol||base.protocol)+(href.protocol||href.authority?href.authority:base.authority)+removeDotSegments(href.protocol||href.authority||href.pathname.charAt(0)==='/'?href.pathname:href.pathname?(base.authority&&!base.pathname?'/':'')+base.pathname.slice(0,base.pathname.lastIndexOf('/')+1)+href.pathname:base.pathname)+(href.protocol||href.authority||href.pathname?href.search:href.search||base.search)+href.hash;}function getDocumentUri(uri){return uri.split('#')[0];}function normSchema(schema,baseUri){if(schema&&(typeof schema==='undefined'?'undefined':_typeof(schema))==="object"){if(baseUri===undefined){baseUri=schema.id;}else if(typeof schema.id==="string"){baseUri=resolveUrl(baseUri,schema.id);schema.id=baseUri;}if(Array.isArray(schema)){for(var i=0;i<schema.length;i++){normSchema(schema[i],baseUri);}}else{if(typeof schema['$ref']==="string"){schema['$ref']=resolveUrl(baseUri,schema['$ref']);}for(var key in schema){if(key!=="enum"){normSchema(schema[key],baseUri);}}}}}function defaultErrorReporter(language){language=language||'en';var errorMessages=languages[language];return function(error){var messageTemplate=errorMessages[error.code]||ErrorMessagesDefault[error.code];if(typeof messageTemplate!=='string'){return"Unknown error code "+error.code+": "+JSON.stringify(error.messageParams);}var messageParams=error.params;// Adapted from Crockford's supplant()
return messageTemplate.replace(/\{([^{}]*)\}/g,function(whole,varName){var subValue=messageParams[varName];return typeof subValue==='string'||typeof subValue==='number'?subValue:whole;});};}var ErrorCodes={INVALID_TYPE:0,ENUM_MISMATCH:1,ANY_OF_MISSING:10,ONE_OF_MISSING:11,ONE_OF_MULTIPLE:12,NOT_PASSED:13,// Numeric errors
NUMBER_MULTIPLE_OF:100,NUMBER_MINIMUM:101,NUMBER_MINIMUM_EXCLUSIVE:102,NUMBER_MAXIMUM:103,NUMBER_MAXIMUM_EXCLUSIVE:104,NUMBER_NOT_A_NUMBER:105,// String errors
STRING_LENGTH_SHORT:200,STRING_LENGTH_LONG:201,STRING_PATTERN:202,// Object errors
OBJECT_PROPERTIES_MINIMUM:300,OBJECT_PROPERTIES_MAXIMUM:301,OBJECT_REQUIRED:302,OBJECT_ADDITIONAL_PROPERTIES:303,OBJECT_DEPENDENCY_KEY:304,// Array errors
ARRAY_LENGTH_SHORT:400,ARRAY_LENGTH_LONG:401,ARRAY_UNIQUE:402,ARRAY_ADDITIONAL_ITEMS:403,// Custom/user-defined errors
FORMAT_CUSTOM:500,KEYWORD_CUSTOM:501,// Schema structure
CIRCULAR_REFERENCE:600,// Non-standard validation options
UNKNOWN_PROPERTY:1000};var ErrorCodeLookup={};for(var key in ErrorCodes){ErrorCodeLookup[ErrorCodes[key]]=key;}var ErrorMessagesDefault={INVALID_TYPE:"Invalid type: {type} (expected {expected})",ENUM_MISMATCH:"No enum match for: {value}",ANY_OF_MISSING:"Data does not match any schemas from \"anyOf\"",ONE_OF_MISSING:"Data does not match any schemas from \"oneOf\"",ONE_OF_MULTIPLE:"Data is valid against more than one schema from \"oneOf\": indices {index1} and {index2}",NOT_PASSED:"Data matches schema from \"not\"",// Numeric errors
NUMBER_MULTIPLE_OF:"Value {value} is not a multiple of {multipleOf}",NUMBER_MINIMUM:"Value {value} is less than minimum {minimum}",NUMBER_MINIMUM_EXCLUSIVE:"Value {value} is equal to exclusive minimum {minimum}",NUMBER_MAXIMUM:"Value {value} is greater than maximum {maximum}",NUMBER_MAXIMUM_EXCLUSIVE:"Value {value} is equal to exclusive maximum {maximum}",NUMBER_NOT_A_NUMBER:"Value {value} is not a valid number",// String errors
STRING_LENGTH_SHORT:"String is too short ({length} chars), minimum {minimum}",STRING_LENGTH_LONG:"String is too long ({length} chars), maximum {maximum}",STRING_PATTERN:"String does not match pattern: {pattern}",// Object errors
OBJECT_PROPERTIES_MINIMUM:"Too few properties defined ({propertyCount}), minimum {minimum}",OBJECT_PROPERTIES_MAXIMUM:"Too many properties defined ({propertyCount}), maximum {maximum}",OBJECT_REQUIRED:"Missing required property: {key}",OBJECT_ADDITIONAL_PROPERTIES:"Additional properties not allowed",OBJECT_DEPENDENCY_KEY:"Dependency failed - key must exist: {missing} (due to key: {key})",// Array errors
ARRAY_LENGTH_SHORT:"Array is too short ({length}), minimum {minimum}",ARRAY_LENGTH_LONG:"Array is too long ({length}), maximum {maximum}",ARRAY_UNIQUE:"Array items are not unique (indices {match1} and {match2})",ARRAY_ADDITIONAL_ITEMS:"Additional items not allowed",// Format errors
FORMAT_CUSTOM:"Format validation failed ({message})",KEYWORD_CUSTOM:"Keyword failed: {key} ({message})",// Schema structure
CIRCULAR_REFERENCE:"Circular $refs: {urls}",// Non-standard validation options
UNKNOWN_PROPERTY:"Unknown property (not in schema)"};function ValidationError(code,params,dataPath,schemaPath,subErrors){Error.call(this);if(code===undefined){throw new Error("No error code supplied: "+schemaPath);}this.message='';this.params=params;this.code=code;this.dataPath=dataPath||"";this.schemaPath=schemaPath||"";this.subErrors=subErrors||null;var err=new Error(this.message);this.stack=err.stack||err.stacktrace;if(!this.stack){try{throw err;}catch(err){this.stack=err.stack||err.stacktrace;}}}ValidationError.prototype=Object.create(Error.prototype);ValidationError.prototype.constructor=ValidationError;ValidationError.prototype.name='ValidationError';ValidationError.prototype.prefixWith=function(dataPrefix,schemaPrefix){if(dataPrefix!==null){dataPrefix=dataPrefix.replace(/~/g,"~0").replace(/\//g,"~1");this.dataPath="/"+dataPrefix+this.dataPath;}if(schemaPrefix!==null){schemaPrefix=schemaPrefix.replace(/~/g,"~0").replace(/\//g,"~1");this.schemaPath="/"+schemaPrefix+this.schemaPath;}if(this.subErrors!==null){for(var i=0;i<this.subErrors.length;i++){this.subErrors[i].prefixWith(dataPrefix,schemaPrefix);}}return this;};function isTrustedUrl(baseUrl,testUrl){if(testUrl.substring(0,baseUrl.length)===baseUrl){var remainder=testUrl.substring(baseUrl.length);if(testUrl.length>0&&testUrl.charAt(baseUrl.length-1)==="/"||remainder.charAt(0)==="#"||remainder.charAt(0)==="?"){return true;}}return false;}var languages={};function createApi(language){var globalContext=new ValidatorContext();var currentLanguage;var customErrorReporter;var api={setErrorReporter:function setErrorReporter(reporter){if(typeof reporter==='string'){return this.language(reporter);}customErrorReporter=reporter;return true;},addFormat:function addFormat(){globalContext.addFormat.apply(globalContext,arguments);},language:function language(code){if(!code){return currentLanguage;}if(!languages[code]){code=code.split('-')[0];// fall back to base language
}if(languages[code]){currentLanguage=code;return code;// so you can tell if fall-back has happened
}return false;},addLanguage:function addLanguage(code,messageMap){var key;for(key in ErrorCodes){if(messageMap[key]&&!messageMap[ErrorCodes[key]]){messageMap[ErrorCodes[key]]=messageMap[key];}}var rootCode=code.split('-')[0];if(!languages[rootCode]){// use for base language if not yet defined
languages[code]=messageMap;languages[rootCode]=messageMap;}else{languages[code]=Object.create(languages[rootCode]);for(key in messageMap){if(typeof languages[rootCode][key]==='undefined'){languages[rootCode][key]=messageMap[key];}languages[code][key]=messageMap[key];}}return this;},freshApi:function freshApi(language){var result=createApi();if(language){result.language(language);}return result;},validate:function validate(data,schema,checkRecursive,banUnknownProperties){var def=defaultErrorReporter(currentLanguage);var errorReporter=customErrorReporter?function(error,data,schema){return customErrorReporter(error,data,schema)||def(error,data,schema);}:def;var context=new ValidatorContext(globalContext,false,errorReporter,checkRecursive,banUnknownProperties);if(typeof schema==="string"){schema={"$ref":schema};}context.addSchema("",schema);var error=context.validateAll(data,schema,null,null,"");if(!error&&banUnknownProperties){error=context.banUnknownProperties(data,schema);}this.error=error;this.missing=context.missing;this.valid=error===null;return this.valid;},validateResult:function validateResult(){var result={toString:function toString(){return this.valid?'valid':this.error.message;}};this.validate.apply(result,arguments);return result;},validateMultiple:function validateMultiple(data,schema,checkRecursive,banUnknownProperties){var def=defaultErrorReporter(currentLanguage);var errorReporter=customErrorReporter?function(error,data,schema){return customErrorReporter(error,data,schema)||def(error,data,schema);}:def;var context=new ValidatorContext(globalContext,true,errorReporter,checkRecursive,banUnknownProperties);if(typeof schema==="string"){schema={"$ref":schema};}context.addSchema("",schema);context.validateAll(data,schema,null,null,"");if(banUnknownProperties){context.banUnknownProperties(data,schema);}var result={toString:function toString(){return this.valid?'valid':this.error.message;}};result.errors=context.errors;result.missing=context.missing;result.valid=result.errors.length===0;return result;},addSchema:function addSchema(){return globalContext.addSchema.apply(globalContext,arguments);},getSchema:function getSchema(){return globalContext.getSchema.apply(globalContext,arguments);},getSchemaMap:function getSchemaMap(){return globalContext.getSchemaMap.apply(globalContext,arguments);},getSchemaUris:function getSchemaUris(){return globalContext.getSchemaUris.apply(globalContext,arguments);},getMissingUris:function getMissingUris(){return globalContext.getMissingUris.apply(globalContext,arguments);},dropSchemas:function dropSchemas(){globalContext.dropSchemas.apply(globalContext,arguments);},defineKeyword:function defineKeyword(){globalContext.defineKeyword.apply(globalContext,arguments);},defineError:function defineError(codeName,codeNumber,defaultMessage){if(typeof codeName!=='string'||!/^[A-Z]+(_[A-Z]+)*$/.test(codeName)){throw new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');}if(typeof codeNumber!=='number'||codeNumber%1!==0||codeNumber<10000){throw new Error('Code number must be an integer > 10000');}if(typeof ErrorCodes[codeName]!=='undefined'){throw new Error('Error already defined: '+codeName+' as '+ErrorCodes[codeName]);}if(typeof ErrorCodeLookup[codeNumber]!=='undefined'){throw new Error('Error code already used: '+ErrorCodeLookup[codeNumber]+' as '+codeNumber);}ErrorCodes[codeName]=codeNumber;ErrorCodeLookup[codeNumber]=codeName;ErrorMessagesDefault[codeName]=ErrorMessagesDefault[codeNumber]=defaultMessage;for(var langCode in languages){var language=languages[langCode];if(language[codeName]){language[codeNumber]=language[codeNumber]||language[codeName];}}},reset:function reset(){globalContext.reset();this.error=null;this.missing=[];this.valid=true;},missing:[],error:null,valid:true,normSchema:normSchema,resolveUrl:resolveUrl,getDocumentUri:getDocumentUri,errorCodes:ErrorCodes};api.language(language||'en');return api;}var tv4=createApi();tv4.addLanguage('en-gb',ErrorMessagesDefault);//legacy property
tv4.tv4=tv4;return tv4;// used by _header.js to globalise.
});});

var __cov_A9EFyfQb$n0Tz6q5LxzJhg=Function('return this')();if(!__cov_A9EFyfQb$n0Tz6q5LxzJhg.__coverage__){__cov_A9EFyfQb$n0Tz6q5LxzJhg.__coverage__={};}__cov_A9EFyfQb$n0Tz6q5LxzJhg=__cov_A9EFyfQb$n0Tz6q5LxzJhg.__coverage__;if(!__cov_A9EFyfQb$n0Tz6q5LxzJhg['/Users/edoardocavazza/Projects/schema-model/src/schema-model.js']){__cov_A9EFyfQb$n0Tz6q5LxzJhg['/Users/edoardocavazza/Projects/schema-model/src/schema-model.js']={"path":"/Users/edoardocavazza/Projects/schema-model/src/schema-model.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"isObject","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}}},"2":{"name":"clone","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":27},"end":{"line":26,"column":54}}},"4":{"name":"merge","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":27}}},"5":{"name":"get","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":33}}},"6":{"name":"set","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}}},"7":{"name":"getSymbol","line":113,"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":25}}},"8":{"name":"getProperties","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":42}}},"9":{"name":"(anonymous_9)","line":170,"loc":{"start":{"line":170,"column":16},"end":{"line":170,"column":26}}},"10":{"name":"(anonymous_10)","line":180,"loc":{"start":{"line":180,"column":16},"end":{"line":180,"column":26}}},"11":{"name":"(anonymous_11)","line":189,"loc":{"start":{"line":189,"column":17},"end":{"line":189,"column":26}}},"12":{"name":"(anonymous_12)","line":191,"loc":{"start":{"line":191,"column":29},"end":{"line":191,"column":32}}},"13":{"name":"(anonymous_13)","line":201,"loc":{"start":{"line":201,"column":21},"end":{"line":201,"column":24}}},"14":{"name":"(anonymous_14)","line":209,"loc":{"start":{"line":209,"column":31},"end":{"line":209,"column":34}}},"15":{"name":"(anonymous_15)","line":219,"loc":{"start":{"line":219,"column":15},"end":{"line":219,"column":31}}},"16":{"name":"(anonymous_16)","line":231,"loc":{"start":{"line":231,"column":7},"end":{"line":231,"column":23}}},"17":{"name":"(anonymous_17)","line":241,"loc":{"start":{"line":241,"column":7},"end":{"line":241,"column":30}}},"18":{"name":"(anonymous_18)","line":271,"loc":{"start":{"line":271,"column":12},"end":{"line":271,"column":19}}},"19":{"name":"(anonymous_19)","line":287,"loc":{"start":{"line":287,"column":10},"end":{"line":287,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"3":{"start":{"line":5,"column":8},"end":{"line":5,"column":30}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":20}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"7":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"9":{"start":{"line":25,"column":0},"end":{"line":48,"column":1}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":71}},"11":{"start":{"line":26,"column":56},"end":{"line":26,"column":68}},"12":{"start":{"line":27,"column":4},"end":{"line":37,"column":5}},"13":{"start":{"line":28,"column":8},"end":{"line":34,"column":11}},"14":{"start":{"line":29,"column":12},"end":{"line":29,"column":48}},"15":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"16":{"start":{"line":31,"column":16},"end":{"line":31,"column":46}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":25}},"18":{"start":{"line":35,"column":11},"end":{"line":37,"column":5}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":29}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":17}},"21":{"start":{"line":39,"column":4},"end":{"line":46,"column":7}},"22":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"23":{"start":{"line":41,"column":8},"end":{"line":45,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":42}},"25":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"27":{"start":{"line":57,"column":0},"end":{"line":71,"column":1}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":26}},"29":{"start":{"line":59,"column":4},"end":{"line":69,"column":7}},"30":{"start":{"line":60,"column":8},"end":{"line":68,"column":9}},"31":{"start":{"line":61,"column":12},"end":{"line":65,"column":13}},"32":{"start":{"line":62,"column":16},"end":{"line":62,"column":54}},"33":{"start":{"line":64,"column":16},"end":{"line":64,"column":37}},"34":{"start":{"line":67,"column":12},"end":{"line":67,"column":33}},"35":{"start":{"line":70,"column":4},"end":{"line":70,"column":15}},"36":{"start":{"line":81,"column":0},"end":{"line":86,"column":1}},"37":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"38":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"39":{"start":{"line":85,"column":4},"end":{"line":85,"column":20}},"40":{"start":{"line":95,"column":0},"end":{"line":105,"column":1}},"41":{"start":{"line":96,"column":4},"end":{"line":104,"column":7}},"42":{"start":{"line":97,"column":8},"end":{"line":97,"column":19}},"43":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"44":{"start":{"line":99,"column":12},"end":{"line":99,"column":29}},"45":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"46":{"start":{"line":102,"column":12},"end":{"line":102,"column":32}},"47":{"start":{"line":113,"column":0},"end":{"line":122,"column":1}},"48":{"start":{"line":114,"column":4},"end":{"line":120,"column":5}},"49":{"start":{"line":115,"column":8},"end":{"line":119,"column":9}},"50":{"start":{"line":116,"column":12},"end":{"line":116,"column":49}},"51":{"start":{"line":118,"column":12},"end":{"line":118,"column":48}},"52":{"start":{"line":121,"column":4},"end":{"line":121,"column":33}},"53":{"start":{"line":124,"column":0},"end":{"line":124,"column":21}},"54":{"start":{"line":133,"column":0},"end":{"line":155,"column":1}},"55":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"56":{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},"57":{"start":{"line":136,"column":8},"end":{"line":136,"column":35}},"58":{"start":{"line":137,"column":8},"end":{"line":137,"column":40}},"59":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"60":{"start":{"line":140,"column":8},"end":{"line":140,"column":50}},"61":{"start":{"line":142,"column":4},"end":{"line":153,"column":5}},"62":{"start":{"line":143,"column":8},"end":{"line":143,"column":40}},"63":{"start":{"line":144,"column":11},"end":{"line":153,"column":5}},"64":{"start":{"line":145,"column":8},"end":{"line":145,"column":21}},"65":{"start":{"line":146,"column":8},"end":{"line":146,"column":73}},"66":{"start":{"line":147,"column":8},"end":{"line":151,"column":9}},"67":{"start":{"line":148,"column":12},"end":{"line":150,"column":15}},"68":{"start":{"line":149,"column":16},"end":{"line":149,"column":64}},"69":{"start":{"line":152,"column":8},"end":{"line":152,"column":19}},"70":{"start":{"line":154,"column":4},"end":{"line":154,"column":14}},"71":{"start":{"line":157,"column":0},"end":{"line":160,"column":2}},"72":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"73":{"start":{"line":181,"column":8},"end":{"line":181,"column":30}},"74":{"start":{"line":190,"column":8},"end":{"line":194,"column":10}},"75":{"start":{"line":192,"column":16},"end":{"line":192,"column":30}},"76":{"start":{"line":202,"column":8},"end":{"line":202,"column":42}},"77":{"start":{"line":210,"column":8},"end":{"line":210,"column":42}},"78":{"start":{"line":220,"column":8},"end":{"line":222,"column":9}},"79":{"start":{"line":221,"column":12},"end":{"line":221,"column":36}},"80":{"start":{"line":232,"column":8},"end":{"line":232,"column":56}},"81":{"start":{"line":233,"column":8},"end":{"line":233,"column":49}},"82":{"start":{"line":242,"column":8},"end":{"line":246,"column":9}},"83":{"start":{"line":243,"column":12},"end":{"line":245,"column":24}},"84":{"start":{"line":247,"column":8},"end":{"line":247,"column":54}},"85":{"start":{"line":248,"column":8},"end":{"line":262,"column":9}},"86":{"start":{"line":249,"column":12},"end":{"line":249,"column":64}},"87":{"start":{"line":250,"column":12},"end":{"line":250,"column":61}},"88":{"start":{"line":252,"column":12},"end":{"line":261,"column":13}},"89":{"start":{"line":253,"column":16},"end":{"line":257,"column":17},"skip":true},"90":{"start":{"line":254,"column":20},"end":{"line":254,"column":55},"skip":true},"91":{"start":{"line":255,"column":23},"end":{"line":257,"column":17},"skip":true},"92":{"start":{"line":256,"column":20},"end":{"line":256,"column":87},"skip":true},"93":{"start":{"line":258,"column":16},"end":{"line":258,"column":53},"skip":true},"94":{"start":{"line":260,"column":16},"end":{"line":260,"column":38}},"95":{"start":{"line":263,"column":8},"end":{"line":263,"column":42}},"96":{"start":{"line":272,"column":8},"end":{"line":272,"column":41}},"97":{"start":{"line":273,"column":8},"end":{"line":273,"column":45}},"98":{"start":{"line":274,"column":8},"end":{"line":274,"column":51}},"99":{"start":{"line":276,"column":8},"end":{"line":278,"column":9}},"100":{"start":{"line":277,"column":12},"end":{"line":277,"column":30},"skip":true},"101":{"start":{"line":279,"column":8},"end":{"line":279,"column":19}},"102":{"start":{"line":288,"column":8},"end":{"line":288,"column":66}},"103":{"start":{"line":289,"column":8},"end":{"line":289,"column":21}},"104":{"start":{"line":290,"column":8},"end":{"line":295,"column":11}},"105":{"start":{"line":291,"column":12},"end":{"line":291,"column":36}},"106":{"start":{"line":292,"column":12},"end":{"line":294,"column":13}},"107":{"start":{"line":293,"column":16},"end":{"line":293,"column":31}},"108":{"start":{"line":296,"column":8},"end":{"line":301,"column":11}},"109":{"start":{"line":297,"column":12},"end":{"line":299,"column":13}},"110":{"start":{"line":298,"column":16},"end":{"line":298,"column":51}},"111":{"start":{"line":300,"column":12},"end":{"line":300,"column":24}},"112":{"start":{"line":302,"column":8},"end":{"line":302,"column":19}},"113":{"start":{"line":306,"column":0},"end":{"line":306,"column":25}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":4,"column":4}},{"start":{"line":4,"column":4},"end":{"line":4,"column":4}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"3":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":9},"end":{"line":7,"column":29}},{"start":{"line":7,"column":34},"end":{"line":7,"column":56}}]},"4":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":23}},{"start":{"line":14,"column":27},"end":{"line":14,"column":44}},{"start":{"line":14,"column":48},"end":{"line":14,"column":71}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":15},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":70}}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"7":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"8":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"9":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"11":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"12":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"14":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"15":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"16":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"18":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"19":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"20":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":11}},{"start":{"line":144,"column":11},"end":{"line":144,"column":11}}]},"21":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":19},"end":{"line":146,"column":34}},{"start":{"line":146,"column":38},"end":{"line":146,"column":53}},{"start":{"line":146,"column":57},"end":{"line":146,"column":72}}]},"22":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"23":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":8}},{"start":{"line":220,"column":8},"end":{"line":220,"column":8}}]},"24":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":41},"end":{"line":232,"column":48}},{"start":{"line":232,"column":52},"end":{"line":232,"column":54}}]},"25":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"26":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":41},"end":{"line":247,"column":46}},{"start":{"line":247,"column":50},"end":{"line":247,"column":52}}]},"27":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"28":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":29}},{"start":{"line":248,"column":33},"end":{"line":248,"column":49}}]},"29":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12},"skip":true},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"30":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":16},"end":{"line":253,"column":16},"skip":true},{"start":{"line":253,"column":16},"end":{"line":253,"column":16},"skip":true}]},"31":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":20},"end":{"line":253,"column":29},"skip":true},{"start":{"line":253,"column":33},"end":{"line":253,"column":50},"skip":true}]},"32":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":23},"end":{"line":255,"column":23},"skip":true},{"start":{"line":255,"column":23},"end":{"line":255,"column":23},"skip":true}]},"33":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":15},"end":{"line":272,"column":19}},{"start":{"line":272,"column":23},"end":{"line":272,"column":40}}]},"34":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":8},"skip":true},{"start":{"line":276,"column":8},"end":{"line":276,"column":8}}]},"35":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":12},"end":{"line":276,"column":21}},{"start":{"line":276,"column":25},"end":{"line":276,"column":43}}]},"36":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":12}},{"start":{"line":292,"column":12},"end":{"line":292,"column":12}}]},"37":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":16},"end":{"line":292,"column":31}},{"start":{"line":292,"column":35},"end":{"line":292,"column":52}}]},"38":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":12}},{"start":{"line":297,"column":12},"end":{"line":297,"column":12}}]}}};}__cov_A9EFyfQb$n0Tz6q5LxzJhg=__cov_A9EFyfQb$n0Tz6q5LxzJhg['/Users/edoardocavazza/Projects/schema-model/src/schema-model.js'];__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['1']++;tv4.addFormat('date-time',function(data){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['2']++;if(typeof data==='string'){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['1'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['3']++;data=new Date(data);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['1'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['4']++;if((__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['3'][0]++,data instanceof Date)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['3'][1]++,!isNaN(data.getTime()))){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['2'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['5']++;return null;}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['2'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['6']++;return'Invalid date';});function isObject(val){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['1']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['8']++;return(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['4'][0]++,val!==null)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['4'][1]++,val!==undefined)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['4'][2]++,(typeof val==='undefined'?'undefined':_typeof(val))==='object');}function _clone(obj,callback){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['2']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['10']++;callback=(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['5'][0]++,callback)||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['5'][1]++,function(scope,key,prop){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['3']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['11']++;return prop;});__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['12']++;if(Array.isArray(obj)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['6'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['13']++;return obj.map(function(entry,index){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['14']++;entry=callback(obj,index,entry);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['15']++;if(isObject(entry)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['7'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['16']++;return _clone(entry,callback);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['7'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['17']++;return entry;});}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['6'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['18']++;if(obj instanceof Date){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['8'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['19']++;return new Date(obj);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['8'][1]++;}}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['20']++;var res={};__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['21']++;Object.keys(obj).forEach(function(k){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['22']++;var val=callback(obj,k,obj[k]);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['23']++;if(isObject(val)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['9'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['24']++;res[k]=_clone(val,callback);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['9'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['25']++;res[k]=val;}});__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['26']++;return res;}function _merge(obj1,obj2){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['4']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['28']++;var res=_clone(obj1);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['29']++;Object.keys(obj2).forEach(function(key){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['30']++;if(isObject(obj2[key])){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['10'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['31']++;if(isObject(res[key])){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['11'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['32']++;res[key]=_merge(res[key],obj2[key]);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['11'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['33']++;res[key]=obj2[key];}}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['10'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['34']++;res[key]=obj2[key];}});__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['35']++;return res;}function _get(scope,k,internal){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['5']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['37']++;if(internal){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['12'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['38']++;k=getSymbol(k);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['12'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['39']++;return scope[k];}function _set(scope,data,internal){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['6']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['41']++;Object.keys(data).forEach(function(k){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['42']++;var ok=k;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['43']++;if(internal){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['13'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['44']++;k=getSymbol(k);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['13'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['45']++;if(scope[k]!==data[ok]){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['14'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['46']++;scope[k]=data[ok];}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['14'][1]++;}});}function getSymbol(name){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['7']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['48']++;if(!getSymbol.cache[name]){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['15'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['49']++;if(typeof Symbol!=='undefined'){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['16'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['50']++;getSymbol.cache[name]=Symbol(name);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['16'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['51']++;getSymbol.cache[name]='__'+name;}}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['15'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['52']++;return getSymbol.cache[name];}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['53']++;getSymbol.cache={};function getProperties(schema,validator){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['8']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['55']++;var root=!validator;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['56']++;if(root){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['17'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['57']++;validator=tv4.freshApi();__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['58']++;validator.addSchema('',schema);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['17'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['59']++;if(schema.$ref){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['18'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['60']++;schema=validator.getSchema(schema.$ref);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['18'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['61']++;if(schema.properties){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['19'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['62']++;return _clone(schema.properties);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['19'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['63']++;if(root){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['20'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['64']++;var res={};__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['65']++;var defs=(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['21'][0]++,schema['anyOf'])||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['21'][1]++,schema['allOf'])||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['21'][2]++,schema['oneOf']);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['66']++;if(defs){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['22'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['67']++;defs.forEach(function(def){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['68']++;res=_merge(res,getProperties(def,validator));});}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['22'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['69']++;return res;}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['20'][1]++;}}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['70']++;return{};}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['71']++;var DEFAULT_OPTIONS={validate:true,internal:false};var SchemaModel=function(){SchemaModel.merge=function merge(){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['9']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['72']++;return _merge.apply(undefined,arguments);};SchemaModel.clone=function clone(){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['10']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['73']++;return _clone.apply(undefined,arguments);};SchemaModel.create=function create(schema){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['11']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['74']++;return function(_SchemaModel){inherits(_class,_SchemaModel);function _class(){classCallCheck(this,_class);return possibleConstructorReturn(this,_SchemaModel.apply(this,arguments));}createClass(_class,null,[{key:'schema',get:function get$$1(){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['12']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['75']++;return schema;}}]);return _class;}(SchemaModel);};createClass(SchemaModel,null,[{key:'schema',get:function get$$1(){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['13']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['76']++;throw new Error('Missing schema');}},{key:'schemaProperties',get:function get$$1(){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['14']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['77']++;return getProperties(this.schema);}}]);function SchemaModel(data,options){classCallCheck(this,SchemaModel);__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['15']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['78']++;if(data){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['23'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['79']++;this.set(data,options);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['23'][1]++;}}SchemaModel.prototype.get=function get$$1(name,options){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['16']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['80']++;options=_merge(DEFAULT_OPTIONS,(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['24'][0]++,options)||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['24'][1]++,{}));__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['81']++;return _get(this,name,options.internal);};SchemaModel.prototype.set=function set$$1(data,value,options){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['17']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['82']++;if(typeof data==='string'){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['25'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['83']++;return this.set(defineProperty({},data,value),options);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['25'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['84']++;options=_merge(DEFAULT_OPTIONS,(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['26'][0]++,value)||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['26'][1]++,{}));__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['85']++;if((__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['28'][0]++,!options.internal)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['28'][1]++,options.validate)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['27'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['86']++;var dataToValidate=_merge(this.toJSON(true),data);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['87']++;var res=this.validate(dataToValidate,options);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['88']++;if(!res.valid){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['29'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['89']++;if((__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['31'][0]++,res.error)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['31'][1]++,res.error.message)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['30'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['90']++;throw new Error(res.error.message);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['30'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['91']++;if(res.missing.length){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['32'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['92']++;throw new Error('Missing $ref schemas: '+res.missing.join(', '));}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['32'][1]++;}}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['93']++;throw new Error('Validation failed');}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['29'][1]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['94']++;data=dataToValidate;}}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['27'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['95']++;_set(this,data,options.internal);};SchemaModel.prototype.validate=function validate(data){__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['18']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['96']++;data=(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['33'][0]++,data)||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['33'][1]++,this.toJSON(true));__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['97']++;var schema=this.constructor.schema;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['98']++;var res=tv4.validateResult(data,schema);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['99']++;if((__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['35'][0]++,res.valid)&&(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['35'][1]++,res.missing.length)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['34'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['100']++;res.valid=false;}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['34'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['101']++;return res;};SchemaModel.prototype.toJSON=function toJSON(stripUndefined){var _this2=this;__cov_A9EFyfQb$n0Tz6q5LxzJhg.f['19']++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['102']++;var keys=Object.keys(this.constructor.schemaProperties);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['103']++;var res={};__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['104']++;keys.forEach(function(key){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['105']++;var val=_this2.get(key);__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['106']++;if((__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['37'][0]++,!stripUndefined)||(__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['37'][1]++,val!==undefined)){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['36'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['107']++;res[key]=val;}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['36'][1]++;}});__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['108']++;res=_clone(res,function(scope,key,prop){__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['109']++;if(prop instanceof SchemaModel){__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['38'][0]++;__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['110']++;return prop.toJSON(stripUndefined);}else{__cov_A9EFyfQb$n0Tz6q5LxzJhg.b['38'][1]++;}__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['111']++;return prop;});__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['112']++;return res;};return SchemaModel;}();__cov_A9EFyfQb$n0Tz6q5LxzJhg.s['113']++;SchemaModel.symbols={};

var $ref = "#/definitions/person";
var definitions = {"person":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"children":{"type":"array","items":{"$ref":"#/definitions/person"}},"tags":{"type":"array","items":{"type":"string"}}},"required":["id"]}};
var SCHEMA = {
	$ref: $ref,
	definitions: definitions
};

/* eslint-env mocha */describe('Unit: SchemaModel',function(){describe('custom model creation',function(){var Model=SchemaModel.create(SCHEMA);var model=new Model({id:'entry1',name:'Alan',children:[],tags:['father','man','mathematician']});it('should instantiate the model',function(){assert.equal(model.get('id'),'entry1');assert.equal(model.id,'entry1');});it('should handle complex data',function(){model.set('children',[new Model({id:'child1',name:'Julian'})]);assert.equal(model.get('children').length,1);assert(model.get('children')[0]instanceof Model);assert(model.validate().valid);assert.equal(JSON.stringify(model.toJSON()),'{"id":"entry1","name":"Alan","children":[{"id":"child1","name":"Julian"}],"tags":["father","man","mathematician"]}');});});describe('empty schema model',function(){it('throws on instantiation',function(){var willThrow=function willThrow(){new SchemaModel({id:'throw'});};assert.throws(willThrow,Error,'Missing schema');});});describe('validation',function(){var Model=SchemaModel.create(SCHEMA);it('should validate correct models',function(){var model=new Model({id:'entry1'});assert(model.validate().valid);});it('should set correct values',function(){var model=new Model({id:'entry1'});model.set('name','Alan');assert.equal(model.get('name'),'Alan');assert.equal(model.name,'Alan');assert(model.validate().valid);});it('should not set wrong values',function(){var model=new Model({id:'entry1',name:'Alan'});var willThrow=function willThrow(){model.set('name',2);};assert.throws(willThrow,Error,'Invalid type: number (expected string)');assert.equal(model.get('name'),'Alan');assert.equal(model.name,'Alan');});it('should not set wrong complex values',function(){var model=new Model({id:'entry1',name:'Alan',children:[]});var willThrow=function willThrow(){model.set('children',[{id:'child1',name:2}]);};assert.throws(willThrow,Error,'Invalid type: number (expected string)');assert.equal(model.get('name'),'Alan');assert.equal(model.get('children').length,0);});it('should skip validation',function(){var model=new Model({id:'entry1'});model.set('name',2,{validate:false});assert(model.get('name'),2);assert(model.name,2);var validation=model.validate();assert.equal(validation.valid,false);assert.equal(validation.error.message,'Invalid type: number (expected string)');});it('should invalidate models with missing data',function(){var model=new Model();var validation=model.validate();assert.equal(validation.valid,false);assert.equal(validation.error.message,'Missing required property: id');});});describe('use custom getters',function(){var Model=function(_SchemaModel){inherits(Model,_SchemaModel);function Model(){classCallCheck(this,Model);return possibleConstructorReturn(this,_SchemaModel.apply(this,arguments));}createClass(Model,[{key:'id',get:function get$$1(){return this.get('id',{internal:true})||'entry1';},set:function set$$1(id){this.set('id',id,{internal:true});}},{key:'name',get:function get$$1(){return this.get('privateName',{internal:true});},set:function set$$1(name){this.set('privateName',name,{internal:true});}}],[{key:'schema',get:function get$$1(){return SCHEMA;}}]);return Model;}(SchemaModel);it('should set internal properties',function(){var model=new Model({name:'Alan'});assert(model.validate().valid);assert.equal(model.get('id'),'entry1');assert.equal(model.id,'entry1');assert.equal(model.get('name'),'Alan');assert.equal(model.name,'Alan');assert.equal(model.get('privateName',{internal:true}),'Alan');assert.equal(model.privateName,undefined);});});});

Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,